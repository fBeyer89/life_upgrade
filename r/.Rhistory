aparc_ct_l=create_long_table_aparc(aparc_ct, "thickness")
#---- calculate ICC and PD for FreeSurfer cortical thickness----
icc_res_th_unw<-create_icc_table_aparc(aparc_ct_l)
colnames(icc_res_th_unw)=c("ROI","hemi","ICC", "lower ICC", "upper ICC", "PD", "T", "p", "adj.p")
#### plotting
lh_region_value_list=icc_res_th_unw[icc_res_th_unw$hemi=="lh","ICC"]
names(lh_region_value_list) = icc_res_th_unw[icc_res_th_unw$hemi=="lh","ROI"]
rh_region_value_list=icc_res_th_unw[icc_res_th_unw$hemi=="rh","ICC"]
names(rh_region_value_list) = icc_res_th_unw[icc_res_th_unw$hemi=="rh","ROI"]
cb_legend=paste0("ICC for CT in gradunwarp Skyra ND vs. Verio ND [in a.u.]")
cm=vis.region.values.on.subject(subjects_dir, subject_id, atlas, lh_region_value_list,
rh_region_value_list, views=NULL, draw_colorbar="horizontal",
rgloptions=rgloptions,rglactions=list('no_vis'=T))
img = vis.export.from.coloredmeshes(cm, colorbar_legend=cb_legend, output_img = paste0(outputdir,"thickness_icc_unwarped.png"))
lh_region_value_list=icc_res_th_unw[icc_res_th_unw$hemi=="lh","PD"]
names(lh_region_value_list) = icc_res_th_unw[icc_res_th_unw$hemi=="lh","ROI"]
rh_region_value_list=icc_res_th_unw[icc_res_th_unw$hemi=="rh","PD"]
names(rh_region_value_list) = icc_res_th_unw[icc_res_th_unw$hemi=="rh","ROI"]
cb_legend=paste0("PD for CT (gradunwarp Verio ND - Skyra ND) [in %]")
cm=vis.region.values.on.subject(subjects_dir, subject_id, atlas, lh_region_value_list,
rh_region_value_list, views=NULL,
draw_colorbar="horizontal",makecmap_options=list('colFn'=makecmap_pd,'symm'=TRUE),
rgloptions=rgloptions,rglactions=list('no_vis'=T))
img = vis.export.from.coloredmeshes(cm, colorbar_legend=cb_legend, output_img = paste0(outputdir,"thickness_pd_unwarped.png"))
while (rgl.cur() > 0) { rgl.close() }
subjects_dir = "/data/pt_nro186_lifeupdate/Data/FREESURFER/FREESURFER_SKYRA_ND"
subject_id = 'fsaverage'
data_dir="/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/ICC_analysis/ICC_pairedt_results/nd_nd/"
#"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/ICC_analysis/ICC_pairedt_results/unwarped/"
output="/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/Analysis_R/Figures/PLOS/Revision/vertexwise/nd_nd/"
type="inflated" #"pial" #
atlas = 'aparc';
for (o in c("ICC", "pd")){
for (a in c("thickness", "area", "volume")){
lh=paste0(data_dir,"lh.",a,"_sm10_",o,".mgz")
print(lh)
rh=paste0(data_dir,"rh.",a,"_sm10_",o,".mgz")
print(rh)
outputimg=paste0(output,a,"_sm10_",o,".png")
if (o=="pd"){
o1="PD"
unit="[in %]"
name=" (Verio ND - Skyra ND) " #" (gradunwarp Verio ND - Skyra ND) " " (Verio ND -Skyra D) "
} else {
o1="ICC"
unit="[in a.u.]"
name=" in Skyra ND vs. Verio ND "} #" in gradunwarp Skyra ND vs. Verio ND " " in Skyra D vs. Verio ND "
if (a=="thickness"){
a1="CT"
} else if (a=="area") {
a1="CA"} else {
a1="CV"
}
cb_legend=paste0(o1, " for ", a1, name, unit)
#cb_legend=paste0(o1, " for ", a1, name , unit)
#cb_legend=paste0(o1, " for ", a1, name, unit)
lh_data = freesurferformats::read.fs.morph(lh);
rh_data = freesurferformats::read.fs.morph(rh);
if (o=="pd"){
cm=vis.data.on.subject(subjects_dir, "fsaverage", lh_data, surface=type, rh_data, rgloptions=rgloptions,
draw_colorbar="horizontal",makecmap_options=list('colFn'=makecmap_pd,'symm'=TRUE),views=NULL,
rglactions=list('no_vis'=T))
img = vis.export.from.coloredmeshes(cm, colorbar_legend=cb_legend, output_img = outputimg );
} else {
cm=vis.data.on.subject(subjects_dir, "fsaverage", lh_data, surface=type, rh_data, rgloptions=rgloptions,
draw_colorbar="horizontal",makecmap_options=list('colFn'=makecmap_th),views=NULL,
rglactions=list('no_vis'=T))
img = vis.export.from.coloredmeshes(cm, colorbar_legend=cb_legend, output_img = outputimg )}}}
#close all rgl windows
while (rgl.cur() > 0) { rgl.close() }
data_dir="/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/ICC_analysis/ICC_pairedt_results/unwarped/"
#"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/ICC_analysis/ICC_pairedt_results/nd_nd/"
output="/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/Analysis_R/Figures/PLOS/Revision/vertexwise/unwarped/"
type="inflated" #"pial" #
atlas = 'aparc';
for (o in c("ICC", "pd")){
for (a in c("thickness", "area", "volume")){
lh=paste0(data_dir,"lh.",a,"_sm10_",o,".mgz")
print(lh)
rh=paste0(data_dir,"rh.",a,"_sm10_",o,".mgz")
print(rh)
outputimg=paste0(output,a,"_sm10_",o,".png")
if (o=="pd"){
o1="PD"
unit="[in %]"
name=" (gradunwarp Verio ND - Skyra ND) " #" (Verio ND - Skyra ND) " " (Verio ND -Skyra D) "
} else {
o1="ICC"
unit="[in a.u.]"
name=" in gradunwarp Skyra ND vs. Verio ND "} #" in Skyra ND vs. Verio ND " " in Skyra D vs. Verio ND "
if (a=="thickness"){
a1="CT"
} else if (a=="area") {
a1="CA"} else {
a1="CV"
}
cb_legend=paste0(o1, " for ", a1, name, unit)
#cb_legend=paste0(o1, " for ", a1, name , unit)
#cb_legend=paste0(o1, " for ", a1, name, unit)
lh_data = freesurferformats::read.fs.morph(lh);
rh_data = freesurferformats::read.fs.morph(rh);
if (o=="pd"){
cm=vis.data.on.subject(subjects_dir, "fsaverage", lh_data, surface=type, rh_data, rgloptions=rgloptions,
draw_colorbar="horizontal",makecmap_options=list('colFn'=makecmap_pd,'symm'=TRUE),views=NULL,
rglactions=list('no_vis'=T))
img = vis.export.from.coloredmeshes(cm, colorbar_legend=cb_legend, output_img = outputimg );
} else {
cm=vis.data.on.subject(subjects_dir, "fsaverage", lh_data, surface=type, rh_data, rgloptions=rgloptions,
draw_colorbar="horizontal",makecmap_options=list('colFn'=makecmap_th),views=NULL,
rglactions=list('no_vis'=T))
img = vis.export.from.coloredmeshes(cm, colorbar_legend=cb_legend, output_img = outputimg )}}}
#close all rgl windows
while (rgl.cur() > 0) { rgl.close() }
subjects_dir = "/data/pt_nro186_lifeupdate/Data/FREESURFER/FREESURFER_SKYRA_ND"
subject_id = 'fsaverage'
data_dir="/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/ICC_analysis/ICC_pairedt_results/unwarped/"
#"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/ICC_analysis/ICC_pairedt_results/nd_nd/"
output="/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/Analysis_R/Figures/PLOS/Revision/vertexwise/unwarped/"
type="pial" #"inflated"
atlas = 'aparc';
for (o in c("ICC", "pd")){
for (a in c("thickness", "area", "volume")){
lh=paste0(data_dir,"lh.",a,"_sm10_",o,".mgz")
print(lh)
rh=paste0(data_dir,"rh.",a,"_sm10_",o,".mgz")
print(rh)
outputimg=paste0(output,a,"_sm10_",o,".png")
if (o=="pd"){
o1="PD"
unit="[in %]"
name=" (gradunwarp Verio ND - Skyra ND) " #" (Verio ND - Skyra ND) " " (Verio ND -Skyra D) "
} else {
o1="ICC"
unit="[in a.u.]"
name=" in gradunwarp Skyra ND vs. Verio ND "} #" in Skyra ND vs. Verio ND " " in Skyra D vs. Verio ND "
if (a=="thickness"){
a1="CT"
} else if (a=="area") {
a1="CA"} else {
a1="CV"
}
cb_legend=paste0(o1, " for ", a1, name, unit)
#cb_legend=paste0(o1, " for ", a1, name , unit)
#cb_legend=paste0(o1, " for ", a1, name, unit)
lh_data = freesurferformats::read.fs.morph(lh);
rh_data = freesurferformats::read.fs.morph(rh);
if (o=="pd"){
cm=vis.data.on.subject(subjects_dir, "fsaverage", lh_data, surface=type, rh_data, rgloptions=rgloptions,
draw_colorbar="horizontal",makecmap_options=list('colFn'=makecmap_pd,'symm'=TRUE),views=NULL,
rglactions=list('no_vis'=T))
img = vis.export.from.coloredmeshes(cm, colorbar_legend=cb_legend, output_img = outputimg );
} else {
cm=vis.data.on.subject(subjects_dir, "fsaverage", lh_data, surface=type, rh_data, rgloptions=rgloptions,
draw_colorbar="horizontal",makecmap_options=list('colFn'=makecmap_th),views=NULL,
rglactions=list('no_vis'=T))
img = vis.export.from.coloredmeshes(cm, colorbar_legend=cb_legend, output_img = outputimg )}}}
#close all rgl windows
while (rgl.cur() > 0) { rgl.close() }
txamp=read.csv("/data/p_nro186_lifeupdate/BIDS/derivatives/txamp.csv")
head(txamp)
library(dplyr)
txamp %<%
group_by(scanner)
txamp %>%
group_by(scanner)
summarize(mean=mean(txref))
txamp %>%
group_by(scanner)%>%
summarize(mean=mean(txref))
ts=txamp %>%
group_by(scanner)%>%
summarize(mean=mean(txref))
ts
ts=txamp %>%
group_by(scanner)%>%
summarize(mean=mean(txref), sd=sd(txref))
ts
txamp[txamp$subj=="LI05211910",]
txamp$subj=="LI05211910"
txamp$subj
txamp[txamp$subj=="sub-LI05211910",]
library(lme4)
library(ggplot2)
library(haven)
library(plyr)
library(dplyr)
library(tidyr)
library(knitr)
#for calculating ICC and bootstrapping
library(psych)
library(psy)
library(effsize)
library(boot)
library(lsr)
library(pwr)
#library(kableExtra)
#options(knitr.table.format = "latex")
#for plot arrangements
library(wesanderson)
library(cowplot)
library(patchwork)
source("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/Analysis_R/PLOS_submission_0920/Review/icc_table.R")
source("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/Analysis_R/PLOS_submission_0920/Review/create_long_table.R")
source("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/Analysis_R/PLOS_submission_0920/Review/cnr_rh_table.R")
source("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/Analysis_R/PLOS_submission_0920/Review/Bland_Altman.R")
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE, fig.height=2, fig.width=4)
library(fsbrain)
atlas = 'aparc';
template_subject = 'fsaverage';
template_subjects_dir = "/data/pt_nro186_lifeupdate/Data/FREESURFER/FREESURFER_long/";
library('rgl');
#r3dDefaults$windowRect=c(50, 50, 500, 500);
rgloptions=list('windowRect'=c(30, 30, 1200, 1200))
makecmap_th = colorRampPalette(RColorBrewer::brewer.pal(9, name="YlOrRd"));
makecmap_pd = colorRampPalette(RColorBrewer::brewer.pal(9, name="RdBu"));
#compare ND vs ND
aparc_ct_rh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_thickness_VERIO_ND_SKYRA_ND_rh_nd.txt", sep = '\t')
aparc_ct_lh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_thickness_VERIO_ND_SKYRA_ND_lh_nd.txt", sep = '\t')
aparc_ct=merge(aparc_ct_rh,aparc_ct_lh, by.x="rh.aparc.thickness", by.y="lh.aparc.thickness")
colnames(aparc_ct)[1]="ID"
aparc_ct_l=create_long_table_aparc(aparc_ct,"thickness")
#---- calculate ICC and PD for FreeSurfer cortical thickness----
icc_res_th<-create_icc_table_aparc(aparc_ct_l)
colnames(icc_res_th)=c("ROI","hemi","ICC", "lower ICC", "upper ICC", "PD", "T", "p", "adj.p")
head(aparc_ct_l)
aparc_ct_l$subjid
aparc_ct_l
nrow(aparc_ct_l)
aparc_ct=merge(aparc_ct_rh,aparc_ct_lh, by.x="rh.aparc.thickness", by.y="lh.aparc.thickness")
nrow(aparc_ct)
head(aparc_ct)
rep(c(1:116),each=2)
aparc_ct$id=rep(c(1:116),each=2)
ct_o=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_ct.csv")
head(ct_o)
aparc_ct$ID=ct_o$ID
head(aparc_ct)
write.csv(aparc_ct[2:,],"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_ct_update.csv" )
aparc_ct[-2,]
aparc_ct[,-1]
colnames(aparc_ct[,-1])
colnames(aparc_ct[,-1,-75])
colnames(aparc_ct[,-1])
write.csv(colnames(aparc_ct[,-1]),"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_ct_update.csv" )
colnames(aparc_ct[,c(-1,-75)])
colnames(aparc_ct[,c(-1)])
colnames(aparc_ct[,c(-1,-76)])
write.csv(aparc_ct[,c(-1,-76)]),"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_ct_update.csv" )
write.csv(aparc_ct[,c(-1,-76)],"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_ct_update.csv" )
aparc_area_rh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_area_VERIO_ND_SKYRA_ND_rh_nd.txt", sep = '\t')
aparc_area_lh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_area_VERIO_ND_SKYRA_ND_lh_nd.txt", sep = '\t')
aparc_area=merge(aparc_area_rh,aparc_area_lh, by.x="rh.aparc.area", by.y="lh.aparc.area")
colnames(aparc_area)[1]="ID"
aparc_area_l=create_long_table_aparc(aparc_area, "area")
#---- calculate ICC and PD for FreeSurfer cortical area----
icc_res_area<-create_icc_table_aparc(aparc_area_l)
colnames(icc_res_area)=c("ROI","hemi","ICC", "lower ICC", "upper ICC", "PD", "T", "p", "adj.p")
aparc_volume_rh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_volume_VERIO_ND_SKYRA_ND_rh_nd.txt", sep = '\t')
aparc_volume_lh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_volume_VERIO_ND_SKYRA_ND_lh_nd.txt", sep = '\t')
aparc_volume=merge(aparc_volume_rh,aparc_volume_lh, by.x="rh.aparc.volume", by.y="lh.aparc.volume")
colnames(aparc_volume)[1]="ID"
aparc_volume_l=create_long_table_aparc(aparc_volume,"volume")
#---- calculate ICC and PD for FreeSurfer cortical volume----
icc_res_vol<-create_icc_table_aparc(aparc_volume_l)
colnames(icc_res_vol)=c("ROI","hemi","ICC", "lower ICC", "upper ICC", "PD", "T", "p", "adj.p")
vol=read.table('/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/subcort/aseg_stats_nd_nd.txt', header=T)
vol_l=create_long_table_subcort(vol)
icc_res_vol<-create_icc_table_vol(vol_l)
colnames(icc_res_vol)=c("ROI","hemi","ICC", "lower ICC", "upper ICC", "PD", "T", "p", "adj.p")
ca_o=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_area.csv")
aparc_ca$ID=ca_o$ID
write.csv(aparc_ca[,c(-1,-76)],"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_area_update.csv" )
aparc_area$ID=ca_o$ID
write.csv(aparc_area[,c(-1,-76)],"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_area_update.csv" )
ca_v=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_volume.csv")
aparc_voume$ID=ca_v$ID
write.csv(aparc_volume[,c(-1,-76)],"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_volume_update.csv" )
aseg_o=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aseg_volume.csv")
vol_l$ID=aseg_o$ID
aseg_o=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aseg_volume.csv")
vol_l$ID=aseg_o$ID
colnames(vol_l)
vol_l$ID=aseg_o$ID
colnames(aseg_o)
aseg_o=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aseg_volume.csv")
vol_l$Measure.volume=aseg_o$Measure.volume
colnames(vol_l)
head(vol_l)
write.csv(vol_l[,c(-13)],"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aseg_update.csv" )
setwd("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/")
qa_info=read.csv("/data/qa_info.csv")
qa_info=read.csv("data/qa_info.csv")
qa_info=read.csv("data/qa_info.csv")
qdec_long=read.table(file = "data/qdec_long")
years=qdec_long$years[seq(2,length(qdec_long$years),2)]
mean_months=round(12*mean(years),2)
sd_months=round(12*sd(years),2)
aparc_ct=read.csv("aparc_ct_update.csv")
aparc_ct=read.csv("data/aparc_ct_update.csv")
aparc_area=read.csv("data/aparc_area_update.csv")
aparc_volume=read.csv("data/aparc_volume_update.csv")
aparc_ct_l=create_long_table_aparc(aparc_ct,"thickness")
#---- calculate ICC and PD for FreeSurfer cortical thickness----
icc_res_th<-create_icc_table_aparc(aparc_ct_l)
head(aparc_ct_l)
library(lme4)
library(ggplot2)
library(haven)
library(plyr)
library(dplyr)
library(tidyr)
library(knitr)
library(psych)
library(psy)
library(boot)
library(MuMIn)
library(kableExtra)
library(patchwork)
library(lsr)
options(knitr.table.format = "latex")
library(wesanderson)
library(cowplot)
source("icc_table.R")
source("create_long_table.R")
source("cnr_rh_table.R")
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE, fig.height=2, fig.width=4)
#put the path to this file here (working directory for Rmarkdown):
opts_knit$set(root.dir = "/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/")
aparc_ct_l=create_long_table_aparc(aparc_ct,"thickness")
#---- calculate ICC and PD for FreeSurfer cortical thickness----
icc_res_th<-create_icc_table_aparc(aparc_ct_l)
head(aparc_ct_l)
colnames(aparc_ct_l)[4:37]
aparc_ct_l=create_long_table_aparc(aparc_ct,"thickness")
head(aparc_ct_l)
aparc_ct
strsplit(toString(aparc_ct[1,"ID"],' ')[[1]]
strsplit(toString(aparc_ct[1,"ID"],' ')[[1]][1]
strsplit(toString(aparc_ct[1,"ID"]),' ')[[1]][1]
strsplit(toString(aparc_ct[1,"ID"]),' ')[[1]]
strsplit(toString(aparc_ct[1,"ID"]),'_')[[1]]
strsplit(toString(aparc_ct[1,"ID"]),'_')[[1]][2]
source("create_long_table.R")
aparc_ct_l=create_long_table_aparc(aparc_ct,"thickness")
head(aparc_ct_l)
source("create_long_table.R")
aparc_ct_l=create_long_table_aparc(aparc_ct,"thickness")
aparc_ct_l=create_long_table_aparc(aparc_ct,"thickness")
colnames(aparc_ct_l)
colnames(aparc_ct_l[,c(2:36,39:73,76,77)])
aparc_ct[1,"subj.ID"]=strsplit(toString(aparc_ct[1,"ID"]),'_')[[1]][1]
aparc_ct[1,"scanner"]=strsplit(toString(aparc_ct[1,"ID"]),'_')[[1]][2]
head(aparc_ct)
colnames(data[,c(2:36,39:73,76,77)])
colnames(data[,c(2:36,39:73,76,77)])
data[,c(2:36,39:73,76,77)]
aparc_ct[,c(2:36,39:73,76,77)]
colnames(aparc_ct[,c(2:36,39:73,76,77)])
vol=read.table('/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/subcort/aseg_stats_nd_nd.txt', header=T)
vol_l=create_long_table_subcort(vol)
icc_res_vol<-create_icc_table_vol(vol_l)
#compare ND vs ND
aparc_ct_rh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_thickness_VERIO_ND_SKYRA_ND_rh_nd.txt", sep = '\t')
aparc_ct_lh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_thickness_VERIO_ND_SKYRA_ND_lh_nd.txt", sep = '\t')
aparc_ct=merge(aparc_ct_rh,aparc_ct_lh, by.x="rh.aparc.thickness", by.y="lh.aparc.thickness")
colnames(aparc_ct)[1]="ID"
aparc_ct_l=create_long_table_aparc(aparc_ct,"thickness")
#---- calculate ICC and PD for FreeSurfer cortical thickness----
icc_res_th<-create_icc_table_aparc(aparc_ct_l)
aparc_ct_rh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_thickness_VERIO_ND_SKYRA_ND_rh_nd.txt", sep = '\t')
aparc_ct_lh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_thickness_VERIO_ND_SKYRA_ND_lh_nd.txt", sep = '\t')
aparc_ct=merge(aparc_ct_rh,aparc_ct_lh, by.x="rh.aparc.thickness", by.y="lh.aparc.thickness")
aparc_area_rh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_area_VERIO_ND_SKYRA_ND_rh_nd.txt", sep = '\t')
aparc_area_lh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_area_VERIO_ND_SKYRA_ND_lh_nd.txt", sep = '\t')
aparc_area=merge(aparc_area_rh,aparc_area_lh, by.x="rh.aparc.area", by.y="lh.aparc.area")
aparc_volume_rh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_volume_VERIO_ND_SKYRA_ND_rh_nd.txt", sep = '\t')
aparc_volume_lh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_volume_VERIO_ND_SKYRA_ND_lh_nd.txt", sep = '\t')
aparc_volume=merge(aparc_volume_rh,aparc_volume_lh, by.x="rh.aparc.volume", by.y="lh.aparc.volume")
ct_o=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_ct.csv")
colnames(aparc_ct)
aparc_ct$rh.aparc.thickness=ct_o$ID
head(aparc_ct)
write.csv(aparc_ct[,c(-1,-76)],row.names = F, "/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_ct_update.csv" )
ct_o=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_ct.csv")
aparc_ct$rh.aparc.thickness=ct_o$ID
colnames(aparc_ct)[1]="ID"
write.csv(aparc_ct[,c(-1,-76)],row.names = F, "/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_ct_update.csv" )
aparc_ct_rh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_thickness_VERIO_ND_SKYRA_ND_rh_nd.txt", sep = '\t')
aparc_ct_lh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_thickness_VERIO_ND_SKYRA_ND_lh_nd.txt", sep = '\t')
aparc_ct=merge(aparc_ct_rh,aparc_ct_lh, by.x="rh.aparc.thickness", by.y="lh.aparc.thickness")
ct_o=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_ct.csv")
aparc_ct$rh.aparc.thickness=ct_o$ID
colnames(aparc_ct)[1]="ID"
colnames(aparc_ct)
write.csv(aparc_ct,row.names = F, "/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_ct_update.csv" )
ca_o=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_area.csv")
aparc_area$rh.aparc.area=ca_o$ID
colnames(aparc_area)[1]="ID"
write.csv(aparc_area,"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_area_update.csv" )
write.csv(aparc_area,row.names = F,"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_area_update.csv" )
ca_v=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_volume.csv")
aparc_volume$rh.aparc.volume=ca_v$ID
colnames(aparc_volume)[1]="ID"
write.csv(aparc_volume,"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_volume_update.csv" )
write.csv(aparc_volume,row.names = F,"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_volume_update.csv" )
vol=read.table('/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/subcort/aseg_stats_nd_nd.txt', header=T)
vol_l=create_long_table_subcort(vol)
aseg_o=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aseg_volume.csv")
vol_l$Measure.volume=aseg_o$Measure.volume
write.csv(vol_l[,c(-13)],row.names = F,"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aseg_update.csv" )
source("icc_table.R")
source("create_long_table.R")
source("cnr_rh_table.R")
aparc_ct=read.csv("data/aparc_ct_update.csv")
aparc_area=read.csv("data/aparc_area_update.csv")
aparc_volume=read.csv("data/aparc_volume_update.csv")
#for volumes from longitudinal FreeSurfer subcortical regions
vol=read.csv("data/aseg_update.csv")
aparc_ct_l=create_long_table_aparc(aparc_ct,"thickness")
#---- calculate ICC and PD for FreeSurfer cortical thickness----
icc_res_th<-create_icc_table_aparc(aparc_ct_l)
colnames(icc_res_th)=c("ROI","hemi","ICC", "lower ICC", "upper ICC", "PD", "T", "p", "adj.p")
aparc_area_l=create_long_table_aparc(aparc_area, "area")
#---- calculate ICC and PD for FreeSurfer cortical area----
icc_res_area<-create_icc_table_aparc(aparc_area_l)
colnames(icc_res_area)=c("ROI","hemi","ICC", "lower ICC", "upper ICC", "PD", "T", "p", "adj.p")
aparc_volume_l=create_long_table_aparc(aparc_volume,"volume")
#---- calculate ICC and PD for FreeSurfer cortical volume----
icc_res_vol<-create_icc_table_aparc(aparc_volume_l)
colnames(icc_res_vol)=c("ROI","hemi","ICC", "lower ICC", "upper ICC", "PD", "T", "p", "adj.p")
icc_res_th
mean(icc_res_th$ICC)
round(min(icc_res_th$ICC),2)
nrow(icc_res_th[icc_res_th$p<0.05,])*100/64)
nrow(icc_res_th[icc_res_th$p<0.05,])*100/64
vol_l=create_long_table_subcort(vol)
vol
vol=read.csv("data/aseg_update.csv")
head(vol)
vol=read.table('/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/subcort/aseg_stats_nd_nd.txt', header=T)
head(vol)
aseg_o=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aseg_volume.csv")
vol$Measure.volume=aseg_o$Measure.volume
head(vol)
write.csv(vol,row.names = F,"/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aseg_update.csv" )
#for volumes from longitudinal FreeSurfer subcortical regions
vol=read.csv("data/aseg_update.csv")
vol_l=create_long_table_subcort(vol)
icc_res_vol<-create_icc_table_vol(vol_l)
colnames(icc_res_vol)=c("ROI","hemi","ICC", "lower ICC", "upper ICC", "PD", "T", "p", "adj.p")
for (i in 1:nrow(qa)){
#print(i)
#print(qa[i,1])
tmp=strsplit(toString(qa[i,1]),'_')[[1]]
#print(tmp)
qa[i,"subj"]=tmp[1]
qa[i,"scanner"]=tmp[2]
qa[i,"acq"]=tmp[3]
}
qa=read.csv("data/mriqc_measures.csv")
#for distortion corrected data
#CT
aparc_unw=read.csv("data/aparc_ct_unw.csv")
#subcortical volumes
vol_unw=read.csv("data/vol_unw.csv")
knitr::include_graphics("figures/Cort_BA.png")
aparc_veriond_skyrad=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_ct_veriond_skyrad.csv"
)
#there is none complete data for some subjects, which are probably running right now.
aparc_ct_l=create_long_table_aparc(aparc_veriond_skyrad, "thickness")
#---- calculate ICC and PD for FreeSurfer cortical thickness----
icc_res_th_main<-create_icc_table_aparc(aparc_ct_l)
colnames(icc_res_th_main)=c("ROI","hemi","ICC", "lower ICC", "upper ICC", "PD", "T", "p", "adj.p")
source("Bland_Altman.R")
#Because we are not allowed to share study IDs, we removed all IDs and replaced them with numbers. We share only already merged tables.
#for information on age, sex, duration between scans
qa_info=read.csv("data/qa_info.csv")
qdec_long=read.table(file = "data/qdec_long")
years=qdec_long$years[seq(2,length(qdec_long$years),2)]
med_months=round(12*median(years),2)
range_months=round(12*range(years),2)
#Main analysis (Verio ND vs. Skyra ND)
#for cortical measures from longitudinal FreeSurfer (CT/CA/CV)
aparc_ct=read.csv("data/aparc_ct_update.csv")
aparc_area=read.csv("data/aparc_area_update.csv")
aparc_volume=read.csv("data/aparc_volume_update.csv")
#for volumes from longitudinal FreeSurfer subcortical regions
vol=read.csv("data/aseg_update.csv")
#for QA measures from mriqc
qa=read.csv("data/mriqc_measures.csv")
#for distortion corrected data
#CT
aparc_unw=read.csv("data/aparc_ct_unw.csv")
#subcortical volumes
vol_unw=read.csv("data/vol_unw.csv")
aparc_veriond_skyrad=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/data/aparc_ct_veriond_skyrad.csv"
)
colnames(qa)
for (i in 1:nrow(qa)){
#print(i)
#print(qa[i,1])
tmp=strsplit(toString(qa[i,1]),'_')[[1]]
#print(tmp)
qa[i,"subj"]=tmp[1]
qa[i,"scanner"]=tmp[2]
qa[i,"acq"]=tmp[3]
}
qa$Scanner=as.factor(qa$scanner)
levels(qa$Scanner)=c("Skyra","Verio")
qa$Acquisition=as.factor(qa$acq)
levels(qa$Acquisition)=c("D","ND")
colnames(qa)
