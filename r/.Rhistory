axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
pl2=(tspag_wSkyra|tspag_ND)
pl2
tspag_wSkyra = ggplot(qa[(qa$Scanner=="Skyra"),], aes(x=Acquisition, y=cnr, fill=Acquisition)) +
geom_boxplot()+
labs(subtitle="CNR differences between \nSkyra D and ND acquisitions")+
xlab(bquote("Acquisition")) +
ylab(bquote('CNR')) +
scale_fill_manual(values=wes_palette("Moonrise1",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
tspag_ND = ggplot(qa[(qa$Acquisition=="D"),], aes(x=Scanner, y=cnr, fill=Scanner)) +
geom_boxplot()+
labs(subtitle="CNR differences between \nND acquisitions")+
scale_fill_manual(values=wes_palette("Moonrise2",2,type="discrete")) +
xlab(bquote("Scanner")) +
ylab(bquote('CNR')) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
pl2=(tspag_wSkyra|tspag_ND)
pl2
qa$Scanner=as.factor(qa$scanner)
levels(qa$Scanner)=c("Skyra","Verio")
qa$Acquisition=as.factor(qa$acq)
levels(qa$Acquisition)=c("D","ND")
tspag_cnr = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=cnr, fill =Scanner)) +
geom_boxplot()+
xlab(bquote("Scanner")) +
ylab(bquote('CNR')) +
scale_fill_manual(values=wes_palette("Moonrise2",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
tspag_efc = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=efc, fill=Scanner, group=Scanner)) +   geom_boxplot() +
xlab(bquote("Scanner")) +
ylab(bquote('EFC')) +
scale_fill_manual(values=wes_palette("Moonrise2",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
tspag_cjv = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=cjv, fill=Scanner, group=Scanner)) +   geom_boxplot() +
xlab(bquote("Scanner")) +
ylab(bquote('CJV'))  +
scale_fill_manual(values=wes_palette("Moonrise2",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
pl1=(tspag_cnr|tspag_efc|tspag_cjv)
pl1
names(wes_palettes)
qa$Scanner=as.factor(qa$scanner)
levels(qa$Scanner)=c("Skyra","Verio")
qa$Acquisition=as.factor(qa$acq)
levels(qa$Acquisition)=c("D","ND")
tspag_cnr = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=cnr, fill =Scanner)) +
geom_boxplot()+
xlab(bquote("Scanner")) +
ylab(bquote('CNR')) +
scale_fill_manual(values=wes_palette("Rushmore1",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
tspag_efc = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=efc, fill=Scanner, group=Scanner)) +   geom_boxplot() +
xlab(bquote("Scanner")) +
ylab(bquote('EFC')) +
scale_fill_manual(values=wes_palette("Royal1",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
tspag_cjv = ggplot(qa[!(qa$Scanner=="GrandBudapest1"&qa$Acquisition=="D"),], aes(x=Scanner, y=cjv, fill=Scanner, group=Scanner)) +   geom_boxplot() +
xlab(bquote("Scanner")) +
ylab(bquote('CJV'))  +
scale_fill_manual(values=wes_palette("Moonrise2",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
pl1=(tspag_cnr|tspag_efc|tspag_cjv)
pl1
qa$Scanner=as.factor(qa$scanner)
levels(qa$Scanner)=c("Skyra","Verio")
qa$Acquisition=as.factor(qa$acq)
levels(qa$Acquisition)=c("D","ND")
tspag_cnr = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=cnr, fill =Scanner)) +
geom_boxplot()+
xlab(bquote("Scanner")) +
ylab(bquote('CNR')) +
scale_fill_manual(values=wes_palette("Rushmore1",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
tspag_efc = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=efc, fill=Scanner, group=Scanner)) +   geom_boxplot() +
xlab(bquote("Scanner")) +
ylab(bquote('EFC')) +
scale_fill_manual(values=wes_palette("Royal1",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
tspag_cjv = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=cjv, fill=Scanner, group=Scanner)) +   geom_boxplot() +
xlab(bquote("Scanner")) +
ylab(bquote('CJV'))  +
scale_fill_manual(values=wes_palette("GrandBudapest1",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
pl1=(tspag_cnr|tspag_efc|tspag_cjv)
pl1
qa$Scanner=as.factor(qa$scanner)
levels(qa$Scanner)=c("Skyra","Verio")
qa$Acquisition=as.factor(qa$acq)
levels(qa$Acquisition)=c("D","ND")
tspag_cnr = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=cnr, fill =Scanner)) +
geom_boxplot()+
xlab(bquote("Scanner")) +
ylab(bquote('CNR')) +
scale_fill_manual(values=wes_palette("FantasticFox1",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
tspag_efc = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=efc, fill=Scanner, group=Scanner)) +   geom_boxplot() +
xlab(bquote("Scanner")) +
ylab(bquote('EFC')) +
scale_fill_manual(values=wes_palette("Royal1",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
tspag_cjv = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=cjv, fill=Scanner, group=Scanner)) +   geom_boxplot() +
xlab(bquote("Scanner")) +
ylab(bquote('CJV'))  +
scale_fill_manual(values=wes_palette("GrandBudapest1",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
pl1=(tspag_cnr|tspag_efc|tspag_cjv)
pl1
qa$Scanner=as.factor(qa$scanner)
levels(qa$Scanner)=c("Skyra","Verio")
qa$Acquisition=as.factor(qa$acq)
levels(qa$Acquisition)=c("D","ND")
tspag_cnr = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=cnr, fill =Scanner)) +
geom_boxplot()+
xlab(bquote("Scanner")) +
ylab(bquote('CNR')) +
scale_fill_manual(values=wes_palette("FantasticFox1",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
tspag_efc = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=efc, fill=Scanner, group=Scanner)) +   geom_boxplot() +
xlab(bquote("Scanner")) +
ylab(bquote('EFC')) +
scale_fill_manual(values=wes_palette("FantasticFox1",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
tspag_cjv = ggplot(qa[!(qa$Scanner=="Skyra"&qa$Acquisition=="D"),], aes(x=Scanner, y=cjv, fill=Scanner, group=Scanner)) +   geom_boxplot() +
xlab(bquote("Scanner")) +
ylab(bquote('CJV'))  +
scale_fill_manual(values=wes_palette("FantasticFox1",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
pl1=(tspag_cnr|tspag_efc|tspag_cjv)
pl1
tspag_wSkyra = ggplot(qa[(qa$Scanner=="Skyra"),], aes(x=Acquisition, y=cnr, fill=Acquisition)) +
geom_boxplot()+
labs(subtitle="CNR differences between \nSkyra D and ND acquisitions")+
xlab(bquote("Acquisition")) +
ylab(bquote('CNR')) +
scale_fill_manual(values=wes_palette("Moonrise2",2,type="discrete")) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
tspag_ND = ggplot(qa[(qa$Acquisition=="D"),], aes(x=Scanner, y=cnr, fill=Scanner)) +
geom_boxplot()+
labs(subtitle="CNR differences between \nND acquisitions")+
scale_fill_manual(values=wes_palette("FantasticFox1",2,type="discrete")) +
xlab(bquote("Scanner")) +
ylab(bquote('CNR')) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
strip.text = element_text(size=12),
legend.position="top")
pl2=(tspag_wSkyra|tspag_ND)
pl2
colnames(cnr_th_table)=c("ROI","hemi","CNR estimate", "scanner estimate", "p CNR","p scanner", "adj.p.CNR","adj.p.scanner")
cnr_th_table[,c(-1,-2)]=round(cnr_th_table[,c(-1,-2)],3)
cnrcttab=
cnr_th_table %>%
mutate(
adj.p.CNR = cell_spec(adj.p.CNR, "latex", bold = ifelse(adj.p.CNR < 0.05, T, F))
)  %>%
mutate(
adj.p.scanner = cell_spec(adj.p.scanner, "latex", bold = ifelse(adj.p.scanner < 0.05, T, F))
)   %>%
kable("latex", escape = F, caption="Association of CNR and scanner with CT") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
cnrcttab
colnames(cnr_th_table)
cnr_th_table
qa_info=read.csv("/data/pt_nro186_lifeupdate/Data/FREESURFER/QA/QA_list_short.csv")
colnames(qa_info)
qa_info[,c(-1)]
colnames(qa_info[,c(-1)])
write.csv(qa_info[,c(-1)], "/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/data/qa.csv")
qa_info=read.csv("../qa/qs.csv")
qa_info=read.csv("./qa/qs.csv")
pwd()
wd()
cwd()
ls
ls()
getwd()
library(lme4)
library(ggplot2)
library(haven)
library(plyr)
library(dplyr)
library(tidyr)
library(knitr)
library(psych)
library(psy)
library(boot)
library(MuMIn)
library(kableExtra)
library(patchwork)
library(lsr)
options(knitr.table.format = "latex")
library(wesanderson)
library(cowplot)
source("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/Analysis_R/icc_table.R")
source("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/Analysis_R/create_long_table.R")
source("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/Analysis_R/cnr_rh_table.R")
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE, fig.height=2, fig.width=4)
setwd("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/")
getwd() + "/data/qa.csv"
getwd()
library(lme4)
library(ggplot2)
library(haven)
library(plyr)
library(dplyr)
library(tidyr)
library(knitr)
library(psych)
library(psy)
library(boot)
library(MuMIn)
library(kableExtra)
library(patchwork)
library(lsr)
options(knitr.table.format = "latex")
library(wesanderson)
library(cowplot)
source("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/Analysis_R/icc_table.R")
source("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/Analysis_R/create_long_table.R")
source("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/Analysis_R/cnr_rh_table.R")
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE, fig.height=2, fig.width=4)
opts_knit$set(root.dir = "/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/")
read.csv("/data/qa.csv")
read.csv("./data/qa.csv")
getwd()
qa_info=read.csv("/data/qa.csv")
opts_knit$set(root.dir = "/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/")
qa_info=read.csv("/data/pt_nro186_lifeupdate/Data/FREESURFER/QA/QA_list_short.csv")
write.csv(qa_info[,c(-1)], "qa.csv")
ls
ls()
getwd()
setwd("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/qa.csv")
setwd("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/life_upgrade/r/")
qdec_long=read.table("/data/pt_nro186_lifeupdate/Analysis/Freesurfer/ICC/long.qdec.table.dat",header=TRUE)
write.table(qdec_long[,c(-1)])
qdec_long
ls()
aparc_ct_l
qdec_long
years=qdec_long$years[seq(2,length(qdec_long$years),2)]
years
levels(qdec_long$fsid)
rep(c(1,2),50))
rep(c(1,2),50)
rep(c(50),2)
rep(c(50),2)+rep(c(1,2),50)
rep(1, times = 2, length.out = 50, each = 2)
rep(c(1,2), times = 2, length.out = 50, each = 2)
rep(c(1:126), times = 2, length.out = 50, each = 2)
nrow(qdec_long)
232/2
rep(c(1:116), length.out = 232, each = 2)
qdec_long$fsid
qdec_long$fsid.base
qdec_long$id.base=as.factor(rep(c(1:116), length.out = 232, each = 2))
as.factor(rep(c(1:116), length.out = 232, each = 2))+rep(c(1,2),n=116)
rep(c(1,2),n=116)
rep(c(1,2),116)
as.factor(rep(c(1:116), length.out = 232, each = 2))+rep(c(1,2),116)
[as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c(1,2),116)]
paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c(1,2),116))
paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c(1,2),116), sep="_")
qdec_long
paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("VERIO","SKYRA"),116), sep="_")
qdec_long$id=paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("VERIO","SKYRA"),116), sep="_")
qdec_long
#for QA
write.table(qdec_long, "qdec_long")
#for QA
qdec_long=read.table("qdec_long")
qdec_long
qdec_long[,c(-1,-2)]
write.table(qdec_long[,c(-1,-2)], "qdec_long")
#for QA
qdec_long=read.table(file = qdec_long)
#for QA
qdec_long=read.table(file = "qdec_long")
qdec_long
qa_info
qa_info=read.csv("qa.csv")
colnames(qa_info)
nrow(qa_info)
round(mean(qa_info$Alter_aktuell),2)
qa_info$Alter_aktuell
qa_info=read.csv("/data/pt_nro186_lifeupdate/Data/FREESURFER/QA/QA_list_short.csv")
nrow(qa_info)
qa_info=read.csv("/data/pt_nro186_lifeupdate/Data/FREESURFER/QA/QA_list_short.csv")
qa_info$ID
qa_info=read.csv("/data/pt_nro186_lifeupdate/Data/FREESURFER/QA/QA_list_short.csv")
qa_info=qa_info[!(qa_info$ID== ""),]
levels(qa_info$Geschlecht)=droplevels(qa_info$Geschlecht)
levels(qa_info$Geschlecht)=c("w","m","m","w")
nrow(qa_info)
write.csv(qa_info[,c(-1)],"qa_info.csv")
qa_info=read.csv("qa_info.csv")
nrow(qa_info)
round(mean(qa_info$Alter_aktuell),2)
aparc_ct
aparc_ct
colnames(aparc_ct)
aparc_ct$ID
aparc_ct$ID
qdec_long$id=paas.factor(rep(c(1:116), length.out = 232, each = 2)ste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("VERIO","SKYRA"),116), sep="_")
as.factor(rep(c(1:116), length.out = 232, each = 2)
)
qdec_long$id=paas.factor(rep(c(1:116), length.out = 232, each = 2)ste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("VERIO","SKYRA"),116), sep="_")
as.factor(rep(c(1:116), length.out = 232, each = 2)ste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("VERIO","SKYRA"),116), sep="_")
paste((as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("VERIO","SKYRA"),116), sep="_")
paste(as.factor(rep(c(1:116), length.out = 232, each = 2),rep(c("VERIO","SKYRA"),116), sep="_")
paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("VERIO","SKYRA"),116), sep="_")
paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("VERIO","SKYRA"),116), rep(".long.template", 232), as.factor(rep(c(1:116), length.out = 232, each = 2)), sep="_")
test= paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("VERIO","SKYRA"),116), rep(".long.template", 232), as.factor(rep(c(1:116), length.out = 232, each = 2)), sep="_")
test
str_replace(test, "VERIO_", "VERIO")
sub(test, "VERIO_", "VERIO")
test= paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("_VERIO","_SKYRA"),116), rep(".long.template_", 232), as.factor(rep(c(1:116), length.out = 232, each = 2)), sep="")
test
aparc_ct
aparc_ct$ID
aparc_ct$anonymID=subID
subID= paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("_VERIO","_SKYRA"),116), rep(".long.template_", 232), as.factor(rep(c(1:116), length.out = 232, each = 2)), sep="")
aparc_ct$anonymID=subID
aparc_ct[,c(ID,anonymID)]
aparc_ct[,c("ID","anonymID")]
write.csv(aparc_ct[,c(-1),"aparc_ct.csv"])
write.csv(aparc_ct[,c(-1)],"aparc_ct.csv")
aparc_ct=read.csv("aparc_ct.csv")
strsplit(toString(aparc_ct[1,"anonymID"]),'_')[[1]][1]
aparc_ct_rh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_thickness_VERIO_ND_SKYRA_D_rh_main.txt", sep = '\t')
aparc_ct_lh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_thickness_VERIO_ND_SKYRA_D_lh_main.txt", sep = '\t')
aparc_ct=merge(aparc_ct_rh,aparc_ct_lh, by.x="rh.aparc.thickness", by.y="lh.aparc.thickness")
data=merge(aparc_ct_rh,aparc_ct_lh, by.x="rh.aparc.thickness", by.y="lh.aparc.thickness")
colnames(aparc_ct)[1]="ID"
subID= paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("_VERIO","_SKYRA"),116), rep(".long.template_", 232), as.factor(rep(c(1:116), length.out = 232, each = 2)), sep="")
aparc_ct$ID=subID
aparc_ct$ID
write.csv(aparc_ct,"aparc_ct.csv")
aparc_area$ID
aparc_area$ID=subID
write.csv(aparc_area,"aparc_area.csv")
aparc_volume$ID=subID
write.csv(aparc_volume,"aparc_volume.csv")
vol=read.table('/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/subcort/aseg_stats.txt', header=T)
vol$Measure.volume
vol$Measure.volume=subID
vol$Measure.volume
vol$Measure.volume=subID
write.csv(vol,"aseg_volume.csv")
qa=read.table('/data/pt_nro186_lifeupdate/Data/BIDS/derivatives/mriqc/group_T1w.tsv', header=T)
qa$bids_name
3*116
paste(as.factor(rep(c(1:116), length.out = 348, each = 3)),rep(c("_SKYRA", "_SKYRA","_VERIO"),116), rep(c("D","ND","D"), 116), sep="")
paste(as.factor(rep(c(1:116), length.out = 348, each = 3)),rep(c("_SKYRA", "_SKYRA","_VERIO"),116), rep(c("_D","_ND","_D"), 116), sep="")
subID= paste(as.factor(rep(c(1:116), length.out = 348, each = 3)),rep(c("_SKYRA", "_SKYRA","_VERIO"),116), rep(c("_D","_ND","_D"), 116), sep="")
subID
qa$bids_name=subID
qa$bids_name
353/3
merged_qa
nrow(merged_qa)
418/3
merged_qa[is.na(merged_qa$bankssts),c("subj")]
merged_qa[is.na(merged_qa$bankssts),]
aparc_ct_l[419:464,"subj"]
nrow(wa)
nrow(qa)
qa$bids_name
qa[qa$bids_name=="sub-2386651_ses-VER1"]
qa[qa$bids_name=="sub-2386651_ses-VER1_acq-D_T1w"]
qa[qa$bids_name=="sub-2386651_ses-VER1_acq-D_T1w",]
qa_new=qa[qa$bids_name!="sub-2386651_ses-VER1_acq-D_T1w"&
qa$bids_name!="sub-2469944_ses-VER1_acq-D_T1w"&
qa$bids_name!="sub-25028a9_ses-VER1_acq-D_T1w"&
qa$bids_name!="sub-2809821_ses-VER1_acq-D_T1w"&
qa$bids_name!="sub-316322e_ses-VER1_acq-D_T1w",]
nrow(qa_new)
subID= paste(as.factor(rep(c(1:116), length.out = 348, each = 3)),rep(c("_SKYRA", "_SKYRA","_VERIO"),116), rep(c("_D","_ND","_D"), 116), sep="")
qa_new$bids_name=subID
qa_new
write.csv(qa_new, "mriqc_measures.csv")
qa=read.csv("mriqc_measures.csv")
for (i in 1:nrow(qa)){
#print(i)
#print(qa[i,1])
tmp=strsplit(toString(qa[i,1]),'_')[[1]]
#print(tmp)
qa[i,"subj"]=tmp[1]
qa[i,"scanner"]=tmp[2]
qa[i,"acq"]=tmp[3]
}
qa
strsplit(toString(qa[1,1]),'_')[[1]]
qa[1,1]
qa
qa$X
qa
qa=read.table('/data/pt_nro186_lifeupdate/Data/BIDS/derivatives/mriqc/group_T1w.tsv', header=T)
qa[1,1]
qa_new=qa[qa$bids_name!="sub-2386651_ses-VER1_acq-D_T1w"&
qa$bids_name!="sub-2469944_ses-VER1_acq-D_T1w"&
qa$bids_name!="sub-25028a9_ses-VER1_acq-D_T1w"&
qa$bids_name!="sub-2809821_ses-VER1_acq-D_T1w"&
qa$bids_name!="sub-316322e_ses-VER1_acq-D_T1w",]
qa_new$bids_name=subID
head(qa_new)
write.csv(qa_new, "mriqc_measures.csv", row.names = FALSE)
qa=read.csv("mriqc_measures.csv")
qa[1,1]
for (i in 1:nrow(qa)){
#print(i)
#print(qa[i,1])
tmp=strsplit(toString(qa[i,1]),'_')[[1]]
#print(tmp)
qa[i,"subj"]=tmp[1]
qa[i,"scanner"]=tmp[2]
qa[i,"acq"]=tmp[3]
}
qa
aparc_ct_l=create_long_table_aparc(aparc_ct,"thickness")
#---- calculate ICC and PD for FreeSurfer cortical thickness----
icc_res_th<-create_icc_table_aparc(aparc_ct_l)
colnames(icc_res_th)=c("ROI","hemi","ICC", "lower ICC", "upper ICC", "PD", "T", "p", "adj.p")
head(icc_res_th)
aparc_ct_l
head(aparc_ct_l)
head(qa)
qa$subj
merged_qa=merge(qa[!is.na(qa$scanner_m),c("subj","scanner","cnr")],aparc_ct_l, by=c("subj","scanner"))
merged_qa=merge(qa[!is.na(qa$scanner),c("subj","scanner","cnr")],aparc_ct_l, by=c("subj","scanner"))
qa[!is.na(qa$scanner),c("subj","scanner","cnr")]
colnames(aparc_ct_l)
aparc_ct_l$subj=aparc_ct_l$subj.ID
aparc_ct_l$subj
merged_qa=merge(qa[!is.na(qa$scanner),c("subj","scanner","cnr")],aparc_ct_l, by=c("subj","scanner"))
head(merged_qa)
aparc_ct_rh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_thickness_VERIO_ND_SKYRA_D_rh_unwarped.txt", sep = '\t')
aparc_ct_lh=read.csv("/data/pt_nro186_lifeupdate/Results/GMV_project_evelyn_frauke/FS_Group_Analysis/FS_stats_allsubjects/longitudinal_statistics/cort/DK_thickness_VERIO_ND_SKYRA_D_lh_unwarped.txt", sep = '\t')
aparc_ct=merge(aparc_ct_rh,aparc_ct_lh, by.x="rh.aparc.thickness", by.y="lh.aparc.thickness", all.x)
colnames(aparc_ct)[1]="ID"
nrow(aparc_ct)
aparc_ct$ID
paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("_unwarped_VERIO.long.template", "_unwarped_SKYRA.long.template"),116), as.factor(rep(c(1:116), length.out = 232, each = 2), sep=""))
paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("_unwarped_VERIO.long.template", "_unwarped_SKYRA.long.template"),116), as.factor(rep(c(1:116), length.out = 232, each = 2)), sep="")
aparc_ct$ID
paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("_unwarped_VERIO.long.template", "_unwarped_SKYRA.long.template_"),116), as.factor(rep(c(1:116), length.out = 232, each = 2)), rep(c("_unwarped"),232), sep="")
paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("_unwarped_VERIO.long.templat_e", "_unwarped_SKYRA.long.template_"),116), as.factor(rep(c(1:116), length.out = 232, each = 2)), rep(c("_unwarped"),232), sep="")
paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("_unwarped_VERIO.long.template_", "_unwarped_SKYRA.long.template_"),116), as.factor(rep(c(1:116), length.out = 232, each = 2)), rep(c("_unwarped"),232), sep="")
aparc_ct$ID
aparc_ct$ID
aparc_ct$ID=subID
write.csv(aparc_ct,"aparc_ct_unw.csv",row.names = FALSE)
subID=paste(as.factor(rep(c(1:116), length.out = 232, each = 2)),rep(c("_unwarped_VERIO.long.template_", "_unwarped_SKYRA.long.template_"),116), as.factor(rep(c(1:116), length.out = 232, each = 2)), rep(c("_unwarped"),232), sep="")
aparc_ct$ID=subID
write.csv(aparc_ct,"aparc_ct_unw.csv",row.names = FALSE)
